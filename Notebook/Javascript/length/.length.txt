The `.length` property is used in JavaScript to retrieve the number of elements in an array, the number of characters in a string, or the number of items in other data structures. Its exact usage depends on the type of object you're working with:

1. **Arrays**: You can use the `.length` property to determine the number of elements in an array.

   ```javascript
   const fruits = ['apple', 'banana', 'cherry'];
   console.log(fruits.length); // Outputs 3
   ```

   In this example, `fruits.length` returns `3` because there are three elements in the `fruits` array.

2. **Strings**: For strings, the `.length` property tells you the number of characters in the string.

   ```javascript
   const message = 'Hello, world!';
   console.log(message.length); // Outputs 13
   ```

   Here, `message.length` returns `13` because there are 13 characters in the string.

3. **Other Objects**: The `.length` property may be used with other objects and data structures to indicate their size or length. However, this usage is less common and depends on the specific object or library you're working with.

It's important to note that the `.length` property is zero-based, meaning that it represents the count of elements or characters starting from index 0. So, if you have an array with a `.length` of 3, the valid indices will be 0, 1, and 2.

Keep in mind that not all objects have a `.length` property, and attempting to access it on an object that doesn't support it will result in `undefined`. Therefore, it's crucial to use `.length` appropriately based on the data type you're working with.